// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  accounts Account[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}


model Category {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String? @unique
  colorRef String?
  description String? 
  image String?
  categories Service[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Service {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String? @unique
  description String? 
  price Float?
  time String?
  category   Category   @relation(fields: [categoryId], references: [id])
  categoryId String @db.ObjectId
  events Event[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  service   Service   @relation(fields: [serviceId], references: [id])
  serviceId String @db.ObjectId
  start DateTime?
  end DateTime?
  name String?
  email String?
  phonenumber Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


enum Day {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

model Availability {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  day Day @default(MONDAY)
  startTime DateTime?
  endTime DateTime?
  isActive Boolean?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}